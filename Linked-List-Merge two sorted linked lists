
Input:
N = 4, M = 3 
valueN[] = {5,10,15,40}
valueM[] = {2,3,20}
Output: 2 3 5 10 15 20 40
Explanation: After merging the two linked
lists, we have merged list as 2, 3, 5,
10, 15, 20, 40.



class LinkedList
{
    //Function to merge two sorted linked list.
    Node sortedMerge(Node head1, Node head2) {
     // This is a "method-only" submission. 
     // You only need to complete this method
     Node temp1 = head1;
     Node temp2 = head2;
     
     PriorityQueue<Integer> pq = new PriorityQueue<>();
     while(temp1 != null){
         pq.add(temp1.data);
         temp1 = temp1.next;
     }
     
     while(temp2 != null){
         pq.add(temp2.data);
         temp2 = temp2.next;
     }
     Node t = head1;
     while(head1.next != null){
         head1.data = pq.poll();
         head1 = head1.next;
     }
     head1.data = pq.poll();
     head1.next = head2;
     while(head2 != null){
         head2.data = pq.poll();
         head2 = head2.next;
     }
     
     return t;
   } 
}


////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

BY USING RECURSION 

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

 if(head1 == null){
        return head2;
    }
    if(head2 == null){
        return head1;
    }
    
    if(head1.data < head2.data){
        head1.next = sortedMerge(head1.next,head2);
        return head1;
    }else{
        head2.next = sortedMerge(head1,head2.next);
        return head2;
    }
    


