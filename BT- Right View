Given a Binary Tree, find Right view of it. Right view of a Binary Tree is set of nodes visible when tree is viewed from right side.

Right view of following tree is 1 3 7 8.

          1
       /     \
     2        3
   /   \      /    \
  4     5   6    7
    \
     8

Example 1:

Input:
       1
    /    \
   3      2
Output: 1 2
Example 2:

Input:
     10
    /   \
  20     30
 /   \
40  60 
Output: 10 30 60



class Solution{
    //Function to return list containing elements of right view of binary tree.
    ArrayList<Integer> rightView(Node root) {
         ArrayList <Integer> arr = new ArrayList<>();
    func(root , arr, 0);
    
    return arr;
    }
    
    public void func(Node root , ArrayList<Integer>arr , int level){
        if(root == null)return;
        
        if(level == arr.size()){
            arr.add(root.data);
        }
        func(root.right , arr , level+1);
        func(root.left , arr , level+1);
        
    }
    
}
