Given two BSTs, return elements of both BSTs in sorted form.


Example 1:

Input:
BST1:
       5
     /   \
    3     6
   / \
  2   4  
BST2:
        2
      /   \
     1     3
            \
             7
            /
           6
Output: 1 2 2 3 3 4 5 6 6 7
Explanation: 
After merging and sorting the
two BST we get 1 2 2 3 3 4 5 6 6 7.
Example 2:

Input:
BST1:
       12
     /   
    9
   / \    
  6   11
BST2:
      8
    /  \
   5    10
  /
 2
Output: 2 5 6 8 9 10 11 12
Explanation: 
After merging and sorting the
two BST we get 2 5 6 8 9 10 11 12.





 
*/
class Solution
{
    //Function to return a list of integers denoting the node 
    //values of both the BST in a sorted order.
    ArrayList<Integer> arr;
    public List<Integer> merge(Node root1,Node root2)
    {
      arr = new ArrayList<>();
      func(root1);
      func(root2);
      Collections.sort(arr);
      return arr;
    }
    
    public void func(Node root){
        if(root == null)return;
        
        func(root.left);
        arr.add(root.data);
        func(root.right);
    } 
}
