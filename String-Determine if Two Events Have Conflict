You are given two arrays of strings that represent two inclusive events that happened on the same day, event1 and event2, where:

event1 = [startTime1, endTime1] and
event2 = [startTime2, endTime2].
Event times are valid 24 hours format in the form of HH:MM.

A conflict happens when two events have some non-empty intersection (i.e., some moment is common to both events).

Return true if there is a conflict between two events. Otherwise, return false.




Input: event1 = ["01:15","02:00"], event2 = ["02:00","03:00"]
Output: true
Explanation: The two events intersect at time 2:00.


Input: event1 = ["01:00","02:00"], event2 = ["01:20","03:00"]
Output: true
Explanation: The two events intersect starting from 01:20 to 02:00.



class Solution {
    public boolean haveConflict(String[] event1, String[] event2) {
        String f1 = event1[0];
        String f2 = event1[1];
        String s1 = event2[0];
        String s2 = event2[1];
        
        String modify1 = f1.substring(0,2)+ f1.substring(3,5);
        String modify2 = f2.substring(0,2)+ f2.substring(3,5);
        String modify3 = s1.substring(0,2)+ s1.substring(3,5);        
        String modify4 = s2.substring(0,2)+ s2.substring(3,5);
        
        int n1 = Integer.parseInt(modify1);
        int n2 = Integer.parseInt(modify2);
        int n3 = Integer.parseInt(modify3);
        int n4 = Integer.parseInt(modify4);
        
        if((n2 >= n3 && n3 >= n1) || (n4 <= n2 && n4 >= n1) || (n1<= n3 && n4 <= n2) || (n3 <=n1 && n2<=n4)){
            return true;
        }
        
        return false;
    }
}
