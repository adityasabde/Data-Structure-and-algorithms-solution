class Solution {
    public int minFallingPathSum(int[][] grid) {
        int dp[][] = new int[200][200];
        for(int i =0 ;i<200;i++){
           for(int j =0 ;j<200 ;j++){
                dp[i][j] = -1;
           }
        }

        if(grid.length == 1){
            Arrays.sort(grid);
            return grid[0][0];
        }
      int min=Integer.MAX_VALUE;
      for(int j =0; j<grid[0].length ;j++){
        min = Math.min(min ,  dfs(grid , 0 , j , dp));
      }
      return min == Integer.MAX_VALUE ? 0 : min;
    }
    public int dfs( int grid[][] , int x , int y , int[][] dp){
        if(x == grid.length )return 0;
        
        if(dp[x][y] != -1)return dp[x][y];

        int min = Integer.MAX_VALUE;

        for(int j = 0; j<grid[0].length ;j++){
            if(j != y){
                min = Math.min(min , dfs(grid , x + 1 , j , dp));
            }
        }
        return dp[x][y] =  min + grid[x][y];
    }
}
