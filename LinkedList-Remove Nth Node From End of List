Given the head of a linked list, remove the nth node from the end of the list and return its head.

Input: head = [1,2,3,4,5], n = 2
Output: [1,2,3,5]





class Solution {
    public ListNode removeNthFromEnd(ListNode head, int n) {
        
        Stack<ListNode> st = new Stack<>();
        ListNode node = head;
        
        while(node != null){
            st.push(node);
            node = node.next;
        }
        if(n == st.size() && st.size()>1){
            ListNode ab = head;
            head = ab.next;
            return head;
        }
        
        
        for(int i =0 ;i<n-1;i++){
            st.pop();
        }
        ListNode v = st.pop();
        
        
        if(st.isEmpty()){
            head = null;
        }else{
            ListNode top = st.peek();
            top.next = v.next;
        }
        
        
        return head;
     }
} 
