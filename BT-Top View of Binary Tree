Given below is a binary tree. The task is to print the top view of binary tree. Top view of a binary tree is the set of nodes visible when the tree is viewed from the top. For the given below tree

       1
    /     \
   2       3
  /  \    /   \
4    5  6   7

Top view will be: 4 2 1 3 7
Note: Return nodes from leftmost node to rightmost node.

Example 1:

Input:
      1
   /    \
  2      3
Output: 2 1 3
Example 2:

Input:
       10
    /      \
  20        30
 /   \    /    \
40   60  90    100
Output: 40 20 10 30 100




   class Pair{
        int hd;
        Node n;
        Pair(int hd , Node n){
            this.hd = hd ;
            this.n = n;
        }
    }

class Solution
{
    //Function to return a list of nodes visible from the top view 
    //from left to right in Binary Tree.
    static ArrayList<Integer> topView(Node root)
    {
        TreeMap<Integer , Integer> map = new TreeMap<>();
        ArrayList<Integer> arr = new ArrayList<>();
        Queue <Pair> q = new LinkedList<>();
        Node node = root;
        int hd = 0;
        q.add(new Pair(hd , node));
        
        while(!q.isEmpty()){
            Pair curr = q.poll();
            
            if(! map.containsKey(curr.hd)){
                map.put(curr.hd , curr.n.data);
            }
            
            if(curr.n.left != null){
                q.add(new Pair(curr.hd -1 , curr.n.left));
            }
            
            if(curr.n.right != null){
                q.add(new Pair(curr.hd + 1 , curr.n.right));
            }
            
        }
        
        for(Map.Entry<Integer , Integer> entry : map.entrySet()){
               arr.add(entry.getValue());
        }
        return arr;
        
    }
  
}
