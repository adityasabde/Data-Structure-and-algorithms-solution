// First Solution

class Solution {
    public String removeKdigits(String num, int k) {
        if(num.length() == k){
            return "0";
        }
        
        Stack <Character> st = new Stack<>();
        
        // 1st for loop for string traverse
        // 2nd while loop for stack traverse;    
        
        for(int i=0;i<num.length();i++){
            while(!st.isEmpty() && k>0 && st.peek() >num.charAt(i)){
                st.pop();
                k--;
            }
            st.push(num.charAt(i));
        }
        
        while(!st.isEmpty() && k>0){
           st.pop();
            k--;
        }
        
        StringBuilder sb = new StringBuilder();
        
        while(!st.isEmpty()){
            sb.insert(0,st.pop());
        }
        
        // for situation 1002  k=1  then it will form 002 to remove 00 from number here we apply the while loop
        while(sb.toString().startsWith("0")){
            sb.deleteCharAt(0);
        }
        
          if(sb.length() == 0){
            return "0";
        }
        
        
       return sb.toString();
        
    }
 }








// second olution


// class Solution {
//     public String removeKdigits(String num, int k) {
//         StringBuilder sb = new StringBuilder(num);
//         while(k > 0){
//             int i  = 0;
//             while (i < sb.length()-1 && sb.charAt(i+1)>= sb.charAt(i) )
//                 i++;
//             sb.deleteCharAt(i);
//             k--;
//         }
//         while(sb.toString().startsWith("0"))
//             sb.deleteCharAt(0);
//         return sb.length() == 0?"0":sb.toString();
//     }
// }
