The task is to find the second smallest number with a given sum of digits as S and the number of digits as D.
Example 1:

Input:
S = 9 
D = 2
Output:
27
Explanation:
18 is the smallest number possible with sum = 9
and total digits = 2, Whereas the second
smallest is 27.
Example 2:

Input:
S = 16
D = 3
Output:
178
Explanation:
169 is the smallest number possible with sum is
16 and total digits = 3, Whereas the second
smallest is 178.

Your Task:
You don't need to read input or print anything. Your task is to complete the function secondSmallest() which takes the two integers S and D respectively and returns a string which is the second smallest number if possible, else return "-1".

Expected Time Complexity: O(D)
Expected Space Complexity: O(1)







//User function Template for Java

class Solution{
    static String secondSmallest(int s, int d){
        // code here
        if(s >= d*9){
            return "-1";
        }
        s = s -1;
        char ans []  = new char[d];
        for(int i =d-1; i>0 ; i--){
            if(s > 9){
                ans[i] = (char ) (9 + '0');
                s -= 9;
            }
            else{
                ans[i] = (char )(s + '0');
                s=0;
            }
        }
        
        ans[0] = (char) (s + 1 + '0');
        
        int idx = d - 1;
        for(int i = d - 1 ;i>=0 ;i--){
            if(ans[i] == '9'){
                idx = i;
            }
            else{
                break;
            }
        }
        
        ans[idx] -= 1;
        ans[idx - 1] += 1;
        
        return String.valueOf(ans);
    }
    
}
