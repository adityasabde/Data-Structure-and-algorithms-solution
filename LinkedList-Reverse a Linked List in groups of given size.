
Input:
LinkedList: 1->2->2->4->5->6->7->8
K = 4
Output: 4 2 2 1 8 7 6 5 
Explanation: 
The first 4 elements 1,2,2,4 are reversed first 
and then the next 4 elements 5,6,7,8. Hence, the 
resultant linked list is 4->2->2->1->8->7->6->5.




class Solution
{
    public static Node reverse(Node node, int k)
    {
        Stack <Integer> st = new Stack<>();
        Node temp = node;
        Node temp2 = node;
        int count =0 ;
        while(temp != null){
            
            if(count < k){
                count++;
                st.push(temp.data);
                
            }else{
                  count = 1;
              
                while(!st.isEmpty() ){
                    temp2.data = st.pop();
                    temp2 = temp2.next;
                }
              st.push(temp.data);
            }
            temp = temp.next;
          
        }
        while(!st.isEmpty()){
            temp2.data = st.pop();
            temp2 = temp2.next;
        }
        
        return node;
    }
}

