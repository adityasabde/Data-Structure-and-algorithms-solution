
class Solution{
    HashMap<String , Integer> map ;
    public int duplicateSubtreeNaryTree(Node root){
       map = new HashMap<>();
       solve(root);
       
       int count = 0;
       for(Map.Entry<String , Integer> entry: map.entrySet() ){
           if(entry.getValue() > 1){
               count++;
           }
       }
    //   System.out.println(map);
       return count;
    }
    
    public String solve(Node root){
        if(root == null){
            return "";
        }
        
        String ans = "";
        
        for(Node r : root.children){
            String a = solve(r);
            ans += a;
        }
        ans += Integer.toString(root.data);
        map.put( ans , map.getOrDefault(ans , 0) +1);
        
        return ans;
    }
    
}
