Given a binary tree, find out whether it contains a duplicate sub-tree of size two or more, or not.


Example 1 :

Input : 
               1
             /   \ 
           2       3
         /   \       \    
        4     5       2     
                     /  \    
                    4    5
Output : 1
Explanation : 
    2     
  /   \    
 4     5
is the duplicate sub-tree.






class Solution {
     HashMap<String , Integer> map = new HashMap<>();

    int dupSub(Node root) {
    add(root);

    int count =0;

    for(int item: map.values()){

        if(item>=2){
            return 1;

        }
    }
    return 0;

    }
    
    public  String add(Node root){

        if(root==null){

            return "$";

        }

        if(root.left==null && root.right==null){

            String s = String.valueOf(root.data);

            return s;

        }

        String left = add(root.left);

        String right  = add(root.right);

        String s =  (left + " " +String.valueOf(root.data) + " "+right);
        
         if(map.containsKey(s)){

            map.put(s , map.get(s)+1);

        }else{

            map.put(s,1);

        }  
        
        return s;
    }

}

